---
# - bugprone-exception-escape is disabled because it causes too many false
#   positives. E.g. if a function marked noexcept needs to take a mutex lock
#   and that throws a std::system_error, what other reasonable thing is there
#   to do than to exit the program? This is well defined. (std::terminate() is
#   called if an exception is thrown in a method marked noexcept.) There also
#   seems to be a bug with std::variant/std::monostate. Warnings are emitted
#   even though only std::variant/std::monostate methods that should be noexcept
#   are called in a function marked noexcept. Unclear if the bug is in
#   clang-tidy or libstdc++. TODO: Fixed? File bug(s)?
#
# - bugprone-suspicious-semicolon is broken with "if constexpr" in templates. See
#   https://bugs.llvm.org/show_bug.cgi?id=35824 .
#
# - clang-analyzer-* is disabled because... googletest... *sigh*.
#
# - modernize-pass-by-value is disabled because it causes many "false" warnings
#   and I have never really liked the recommendation in general. It is too
#   broad. It also seems like the C++ community has swung around a bit on this
#   in later years. See for instance Effective Modern C++ by Scott Meyers.
#
# - modernize-raw-string-literal is disabled because it is too agressive. See
#   https://llvm.org/bugs/show_bug.cgi?id=30964
#
# - readability-misleading-indentation is broken with "if constexpr". See
#   https://bugs.llvm.org/show_bug.cgi?id=32204 .

Checks: "\
bugprone-*,\
-bugprone-exception-escape,\
-bugprone-suspicious-semicolon,\
-clang-analyzer-*,\
google-build-namespaces,\
google-build-using-namespace,\
google-default-arguments,\
google-explicit-constructor,\
google-global-names-in-headers,\
google-readability-casting,\
misc-*,\
modernize-*,\
-modernize-pass-by-value,\
-modernize-raw-string-literal,\
performance-*,\
readability-*,\
-readability-misleading-indentation,\
"

HeaderFilterRegex: '^src/'

CheckOptions:
  - key:   misc-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic
    value: 1
  - key:   modernize-loop-convert.NamingStyle
    value: lower_case
  - key:   modernize-use-default-member-init.UseAssignment
    value: 1
  - key:   readability-braces-around-statements.ShortStatementLines
    value: '8'
  - key:   readability-function-size.LineThreshold
    value: '100'
  - key:   readability-function-size.ParameterThreshold
    value: '8'
  - key:   readability-identifier-naming.ClassCase
    value: CamelCase
  - key:   readability-identifier-naming.ClassMemberCase
    value: lower_case
  - key:   readability-identifier-naming.ConstantCase
    value: UPPER_CASE
  - key:   readability-identifier-naming.ConstantMemberCase
    value: lower_case
  - key:   readability-identifier-naming.ConstantMemberSuffix
    value: '_'
  - key:   readability-identifier-naming.ConstantParameterCase
    value: lower_case
  - key:   readability-identifier-naming.ConstexprVariableCase
    value: UPPER_CASE
  - key:   readability-identifier-naming.EnumCase
    value: CamelCase
  - key:   readability-identifier-naming.FunctionCase
    value: lower_case
  - key:   readability-identifier-naming.LocalConstantCase
    value: lower_case
  - key:   readability-identifier-naming.MemberCase
    value: lower_case
  - key:   readability-identifier-naming.MethodCase
    value: lower_case
  - key:   readability-identifier-naming.NamespaceCase
    value: CamelCase
  - key:   readability-identifier-naming.ParameterCase
    value: lower_case
  - key:   readability-identifier-naming.PrivateMemberCase
    value: lower_case
  - key:   readability-identifier-naming.PrivateMemberSuffix
    value: '_'
  - key:   readability-identifier-naming.ProtectedMemberCase
    value: lower_case
  - key:   readability-identifier-naming.ProtectedMemberSuffix
    value: '_'
  - key:   readability-identifier-naming.StaticConstantCase
    value: lower_case
  - key:   readability-identifier-naming.StructCase
    value: CamelCase
  - key:   readability-identifier-naming.TemplateParameterCase
    value: CamelCase
  - key:   readability-identifier-naming.TypedefCase
    value: CamelCase
  - key:   readability-identifier-naming.UnionCase
    value: CamelCase
  - key:   readability-identifier-naming.ValueTemplateParameterCase
    value: UPPER_CASE
  - key:   readability-identifier-naming.VariableCase
    value: lower_case
  - key:   readability-implicit-bool-conversion.AllowIntegerConditions
    value: '1'
  - key:   readability-implicit-bool-conversion.AllowPointerConditions
    value: '1'
...

